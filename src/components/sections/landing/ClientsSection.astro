---
// Define props from Astro
const { title, subTitle } = Astro.props;

import school1 from "@images/drawing_t.png";
import school2 from "@images/drawing_t.png";
import school3 from "@images/drawing_t.png";
import school4 from "@images/drawing_t.png";
import school5 from "@images/drawing_t.png";
import school6 from "@images/drawing_t.png";
import Image from 'astro/components/Image.astro';
import type { ImageMetadata } from 'astro';

const images = import.meta.glob<{ default: ImageMetadata }>('/src/images/logos/*.{jpeg,jpg,png,webp}')
const imagePaths = Object.entries(images)
const resolvedImages = await Promise.all(
    Object.values(images).map((image) => image().then((mod) => mod.default))
  );



// Define TypeScript interface for props
interface Props {
  title: string;
  subTitle?: string;
}

---

<section
  class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full"
>
  <!-- Title and description -->
  <div class="mx-auto mb-12 lg:mb-16 w-full space-y-1 text-center sm:w-1/2 lg:w-1/3">
    <h2
      class="text-balance text-2xl font-bold leading-tight text-neutral-800 dark:text-neutral-200 sm:text-3xl"
    >
      {title}
    </h2>
    {
      subTitle && (
        <p class="text-pretty leading-tight text-neutral-600 dark:text-neutral-400">
          {subTitle}
        </p>
      )
    }
  </div>
    <div class="px-4">

      <div class="grid grid-cols-3 gap-8 space-y-8 text-gray-500 md:gap-12 lg:gap-x-20 md:grid-cols-3 lg:grid-cols-5 dark:text-gray-400">
        {
          resolvedImages.map((i) => {
            return (
              <Image src={i} alt='sstst' height="100" class="justify-self-center w-auto"/>
            )
          })
        }
      </div>
  <!-- Clients Group SVGs -->
  </div>
</section>
